.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Devotee 3pm"
.TH Devotee 3pm "2020-11-28" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Devotee \- The common parts of the DEbian VOTe EnginE
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use Devotee;
use Getopt::Long;
.PP
my \f(CW$optdesc\fR = Devotee\->\fBOptdesc()\fR;
GetOptions (%$optdesc);
my \f(CW$dvt\fR = Devotee\->new(%::ConfOpts);
\&\f(CW$dvt\fR\->validate(%::ConfOpts) unless
  defined \f(CW$::ConfOpts\fR{'Config File'} && \-r \f(CW$::ConfOpts\fR{'Config File'};
my \f(CW$confref\fR = \f(CW$dvt\fR\->\fBget_config_ref()\fR;
\&\f(CW$dvt\fR\->\fBlock_vote_dir()\fR;
 ...
\&\f(CW$dvt\fR\->\fBunlock_vote_dir()\fR;
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This package handles the details of configuration and serialization of
the vote scripts. It also contains the getopt string for the common
options recognized by the framework, the grammar for the configuration
file, and the default values for a number of parameters affecting the
engine.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-help\fR Print out a usage message." 3
.IX Item "--help Print out a usage message."
.PD 0
.IP "\fB\-\-config_file\fR file" 3
.IX Item "--config_file file"
.RS 3
.PD
.RS 2
Set the file from which the configuratiopn data for this vote is to be
read from.  The file contains simple Name = Value pairs, and may
contain comments starting with the '#' character and going to the end
of that line. See below for a list of known configuratiopn variables.
Please note that the configuration file is not limited to setting
these known variables only, but can extend the list for use in
individual scripts.
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-top_dir\fR dir" 3
.IX Item "--top_dir dir"
.RS 3
.RS 2
This specifies the top directory under which data for the vote shall be
gathered. This directory shall contain the subdirs used by the engine
(unless specifically overridden), contain the common lock file, and
the replay and alias databases. The default for this is the users home
directory.
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-force\fR" 3
.IX Item "--force"
.PD 0
.IP "\fB\-\-noforce\fR" 3
.IX Item "--noforce"
.IP "\fB\-f\fR" 3
.IX Item "-f"
.RS 3
.PD
.RS 2
Normally, most \fBDevotee\fR scripts run incrementally, and thus only
process new and previously unprocessed ballots.  The \fBForce\fR
directive, set by \fB\-\-force\fR or \fB\-f\fR, and unset by \fB\-\-noforce\fR,
directs the scripts to redo the work even though the ballot in
question had been processed already, over writing previously created
output.  The default is \fB\s-1OFF\s0\fR.
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-final_tally\fR" 3
.IX Item "--final_tally"
.RS 3
.RS 2
Set when you need the final tally sheet for a secret ballot. Without
this option, the tally sheet generated for a secret ballot shall be
obfuscated. Has no affect on non secret votes.
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-secret\fR" 3
.IX Item "--secret"
.PD 0
.IP "\fB\-\-nosecret\fR" 3
.IX Item "--nosecret"
.IP "\fB\-s\fR" 3
.IX Item "-s"
.RS 3
.PD
.RS 2
Set whether this vote requires secret ballots or not.  In a secret
Ballot, we create an alias database to create random monikers for each
voter, and the final tally sheet has the \s-1MD5SUM\s0 of the \s-1ID\s0 of each
voter and the secret moniker. This way, each voter may validate that
their vote exists on the tally sheet, but maintains the secrecy of the
vote. This directive is set by \fB\-\-secret\fR or \fB\-s\fR, and negated by
\&\fB\-\-nosecret\fR. The default is \fB\s-1OFF\s0\fR.
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-mkdir\fR" 3
.IX Item "--mkdir"
.PD 0
.IP "\fB\-\-nomkdir\fR" 3
.IX Item "--nomkdir"
.IP "\fB\-m\fR" 3
.IX Item "-m"
.RS 3
.PD
.RS 2
The various scripts that comprise the vote engine save intermediate
steps in various subdirectories, and these subdirs are used to hold
and communicate data between the scripts and subsequent invocations.
If the user has not specified any of the sub directories explicitly,
or if the specified directories do not exist, setting the mkdir flag
shall instruct the vote engine to create missing subdiretories under
the Top Directory. Please note that the directories are created under
the Top Directory, regardless of the specified location. (negate with
\&\-\-nomkdir). Default is \fB\s-1OFF\s0\fR.
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-need_gpg\fR" 3
.IX Item "--need_gpg"
.RS 3
.RS 2
Specifying this flag implies that this vote will be checked against a
\&\s-1GPG\s0 keyring.  Failure to find the \s-1GPG\s0 keyring is a fatal error.
(negate with \-\-noneed_gpg). Default is \fB\s-1ON\s0\fR.
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-need_pgp\fR" 3
.IX Item "--need_pgp"
.RS 3
.RS 2
Specifying this flag implies that this vote will be checked against a
\&\s-1PGP\s0 keyring.  Failure to find the \s-1PGP\s0 keyring is a fatal error.
(negate with \-\-noneed_pgp). Default is \fB\s-1ON\s0\fR.
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-need_ldap\fR" 3
.IX Item "--need_ldap"
.RS 3
.RS 2
Specifying this flag implies that this vote will be checked against a
\&\s-1LDAP\s0 database (negate with \-\-noneed_ldap). Default is \fB\s-1ON\s0\fR.
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-sign_ack\fR" 3
.IX Item "--sign_ack"
.RS 3
.RS 2
Specifying this flag implies that acknowledgements of votes sent to
voters shall be signed as well as encrypted (negate with
\&\-\-nosign_ack). Default is \fB\s-1ON\s0\fR. Failure to find the secret keyring
shall be fatal.
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-gpg_ring\fR  \s-1KEYRING\s0" 3
.IX Item "--gpg_ring KEYRING"
.RS 3
.RS 2
Specify the \s-1GPG\s0 public keyring to use to validate votes
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-pgp_ring\fR  \s-1KEYRING\s0" 3
.IX Item "--pgp_ring KEYRING"
.RS 3
.RS 2
Specify the \s-1PGP\s0 public keyring to use to validate votes
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-sec_ring\fR  \s-1KEYRING\s0" 3
.IX Item "--sec_ring KEYRING"
.RS 3
.RS 2
Specify the secret keyring to use to sign acks
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-ldap_host\fR \s-1HOST\s0" 3
.IX Item "--ldap_host HOST"
.RS 3
.RS 2
Specify the \s-1LDAP\s0 host to contact to validate votes
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-ldap_base\fR \s-1BASESTR\s0" 3
.IX Item "--ldap_base BASESTR"
.RS 3
.RS 2
Specify the base for the \s-1LDAP\s0 query
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-quorum_out\fR \s-1FILE\s0" 3
.IX Item "--quorum_out FILE"
.RS 3
.RS 2
Specify the file name where calculated quorum shall be kept. The file
contains the number of developers, and the value of the variable Q and
K, as defined in the Debian constitution.
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-quorum_err\fR \s-1FILE\s0" 3
.IX Item "--quorum_err FILE"
.RS 3
.RS 2
Specify the file name where information of missing keys is kept
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-quorum_detail\fR \s-1FILE\s0" 3
.IX Item "--quorum_detail FILE"
.RS 3
.RS 2
Specify the file name for developers uids and fingerprints
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-tally_file\fR  \s-1FILE\s0" 3
.IX Item "--tally_file FILE"
.RS 3
.RS 2
Specify the file name for the tally sheet
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-tally_dummy\fR \s-1FILE\s0" 3
.IX Item "--tally_dummy FILE"
.RS 3
.RS 2
Specify the file name for the dummy tally sheet
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-voters_file\fR \s-1FILE\s0" 3
.IX Item "--voters_file FILE"
.RS 3
.RS 2
Specify the file name for the list of people who have voted
.RE
.RE
.RS 3
.RE
.IP "\fB\-\-results\fR \s-1FILE\s0" 3
.IX Item "--results FILE"
.RS 3
.RS 2
Specify the file name where the results should be put
.RE
.RE
.RS 3
.RE
.SH "CLASS METHODS"
.IX Header "CLASS METHODS"
All class methods mediate access to class variables.  All class
methods can be invoked with zero or one parameters. When invoked with
the optional parameter, the class method sets the value of the
underlying class data.  In either case, the value of the underlying
variable is returned.
.SS "Grammar"
.IX Subsection "Grammar"
.SS "Optdesc"
.IX Subsection "Optdesc"
.SS "Usage"
.IX Subsection "Usage"
.SS "Defaults"
.IX Subsection "Defaults"
.SS "Files"
.IX Subsection "Files"
.SS "Subdirs"
.IX Subsection "Subdirs"
.SH "INSTANCE METHODS"
.IX Header "INSTANCE METHODS"
.SS "new"
.IX Subsection "new"
This is the constructor for the class. It takes a number of optional
parameters. If the parameter \fBConfig_File\fR is present, then the
configuration file is read, and the parameters provided override the
values in the configuration file. If there is no parameter
\&\fBConfig_File\fR, then the parameter list is ignored, and the
initialization of the object is deferred.
.SS "read_config"
.IX Subsection "read_config"
This routine attempts to find a configuration file, and parses and
stashes the results if succesfull. It calls the validate method to set
the defaults and validate the settings.
.SS "validate"
.IX Subsection "validate"
This routine is responsible for ensuring that the parameters passed in
(presumably from the command line) are given preference. It then does a
sanity check over the setting, including ensuring that the directories
required are present. Note that we only create the directories if
asked to do so, and then again we only create them under the specified
top level directory Top_Dir. If the seting says we need pgp or gpg, or
both, we try and determine the location of the public keyrings that we
may use.
.SS "dump_config"
.IX Subsection "dump_config"
This routine returns a \f(CW\*(C`Data::Dumper\*(C'\fR for debugging purposes
.SS "get_config_ref"
.IX Subsection "get_config_ref"
This routine returns a reference to the configuration hash
.SS "lock_vote_dir"
.IX Subsection "lock_vote_dir"
This routine is used to lock the vote directory, and ensure only one
process is running for the vote in question. Unlike the spooling
process, the rest of the voting scripts can be run in sequence, and
thus this simple lock ensures that we can continue without treading on
the toes of other voting scripts.
.SS "unlock_vote_dir"
.IX Subsection "unlock_vote_dir"
This routine is the correpsonding unlock routine.
.SS "log_message"
.IX Subsection "log_message"
This routine logs a message into the Log dir
.SH "CAVEATS"
.IX Header "CAVEATS"
This is very inchoate, at the moment, and needs testing.
.SH "BUGS"
.IX Header "BUGS"
None Known so far.
.SH "AUTHOR"
.IX Header "AUTHOR"
Manoj Srivastava <srivasta@debian.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This script is a part of the Devotee package, and is
.PP
Copyright (c) 2002 Manoj Srivastava <srivasta@debian.org>
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0  See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, \s-1MA\s0  02111\-1307  \s-1USA\s0
