.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DVT-QUORUM 1p"
.TH DVT-QUORUM 1p "2020-11-28" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dvt\-quorum \- Determine the quorum for the vote
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
dvt-quorum \-c /path/to/config
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This utility calculates the current Quorum requirements for a Debian
Project General Resolution vote, and is fairly Debian specific.
.PP
Not only does this calculate the quorum, it also generates a list of
developers (and their key fingerprints) who were eligible to vote.
Also recorded are any missing keys; that is, keys whose fingerprints
live in the keyring but not in the \s-1LDAP\s0 database.
.SS "Internal Implementation"
.IX Subsection "Internal Implementation"
It starts by looking at all the fingerprints for all the keys in the
keyrings specified, and caching them. Then, it contacts the \s-1LDAP\s0
server, using the configured details, and gets the uids and
fingerprints registered with \s-1LDAP\s0 that match the filter (the default
filter filters on the basis of the Debian develkopers group in \s-1LDAP\s0).
.PP
Then, it records the \s-1UID\s0's associated with fingerprints that are
present both in the keyring, as well as belong to a Debian developer
in \s-1LDAP,\s0 taking into account some developers have multiple keys.
.PP
\fIConfiguration Options\fR
.IX Subsection "Configuration Options"
.PP
This routine pays attention to the configuration options Top_Dir,
Ldap_Host, Ldap_Base, Ldap_Filter, GPG_Keyring, PGP_Keyring,
SEC_Keyring, PUB_Keyring, Quorum_File, Quorum_Error, and
Quorum_Details.
.SH "CAVEATS"
.IX Header "CAVEATS"
This is very inchoate, at the moment, and needs testing.
.SH "BUGS"
.IX Header "BUGS"
None Known so far.
.SH "AUTHOR"
.IX Header "AUTHOR"
Manoj Srivastava <srivasta@debian.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This script is a part of the Devotee package, and is
.PP
Copyright (c) 2002 Manoj Srivastava <srivasta@debian.org>
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0  See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, \s-1MA\s0  02111\-1307  \s-1USA\s0
