.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "DVT-GPG 1p"
.TH DVT-GPG 1p "2020-11-28" "perl v5.30.0" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
dvt\-gpg \- verify digital signatures on the ballot
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
dvt-gpg \-c /path/to/config
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This routine is designed to verify a gpg signature, given a file, and
optionally a detached signature file. It also maintains a database of
sig ids to prevent a replay attack. This is the fourth step of ballot
processing.
.PP
This is the where we take the files created by \f(CW\*(C`dvt\-mime\*(C'\fR and
verify the cryptographic signature against the provided keyring. For
each file in the work directory produced by dvt-mime, it checks the
signatures against the keyrings configured.  This utility handles both
\&\s-1PGP/MIME\s0 signed messages, as well as the text/plain ascii armored
signed messages.  When handling \s-1PGP/MIME\s0 messages, if it fails to
validate the signature with the body with \s-1CRLF\s0 line endings, it tries
to validate against an alternate version of the body where the line
ending is the normal unix newline; since some MUAs incorrectly
generate the signature without normalizing the line endings.
.PP
Additionally, this script attempts to be idempotent. It is also
incremental, unless a force option is given, in which case it
cleans out the replay database, and runs gpg all over again.
.SS "Internal Implementation"
.IX Subsection "Internal Implementation"
This script pays attention to the configuration parameters Top_Dir,
Body_Dir, Check_Dir, Nack_Dir, Sig_Dir, Msg_Suffix, Msg_Preffix,
Force, Body_Suffix, GPG_Keyring, PGP_Keyring, SEC_Keyring,
PUB_Keyring, Replay_DB, and Sig_Suffix.
.PP
\fIverify_messages\fR
.IX Subsection "verify_messages"
.PP
This routine is the heart of the gpg signature checks done by the
voting machinery.
.SH "CAVEATS"
.IX Header "CAVEATS"
This is very inchoate, at the moment, and needs testing.
.SH "BUGS"
.IX Header "BUGS"
None Known so far.
.SH "AUTHOR"
.IX Header "AUTHOR"
Manoj Srivastava <srivasta@debian.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This script is a part of the Devotee package, and is
.PP
Copyright (c) 2002 Manoj Srivastava <srivasta@debian.org>
.PP
This program is free software; you can redistribute it and/or modify
it under the terms of the \s-1GNU\s0 General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
.PP
This program is distributed in the hope that it will be useful,
but \s-1WITHOUT ANY WARRANTY\s0; without even the implied warranty of
\&\s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0  See the
\&\s-1GNU\s0 General Public License for more details.
.PP
You should have received a copy of the \s-1GNU\s0 General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, \s-1MA\s0  02111\-1307  \s-1USA\s0
