#!/usr/bin/perl -w
#                              -*- Mode: Perl -*-
# dvt-voters ---
# Author           : Manoj Srivastava ( srivasta@glaurung.green-gryphon.com )
# Created On       : Wed Apr  3 21:12:43 2002
# Created On Node  : glaurung.green-gryphon.com
# Last Modified By : Manoj Srivastava
# Last Modified On : Tue Apr 16 18:51:17 2002
# Last Machine Used: glaurung.green-gryphon.com
# Update Count     : 37
# Status           : Unknown, Use with caution!
# HISTORY          :
# Description      :
#
#

use strict;

require 5.005;
use Carp qw(carp croak);
use Fcntl ':flock'; # import LOCK_* constants
use Getopt::Long;

use Net::LDAP;
#use Net::LDAPS;  # commented out stuff useful for LDAPS

=head1 SYNOPSIS

This routine is designed to query the debian ldap server to determine
the unique uid for every debian developer.

=cut

=head1 DESCRIPTION

The unique uid that is determined from LDAP, using the key fingerprint
as a filter, shall be used as primary index, allowing for developers
with multiple keys to still be able to replace their vote.

=cut


=head2 Internal Implementation

=cut

sub create_list {
  my %params   = @_;
  die "Internal Error!" unless defined $params{'Configuration'};

  my $confref = $params{'Configuration'}->get_config_ref();
  my %Config = %{ $confref };
  my $dvt = $params{'Configuration'};

  my $topdir      = $Config{'Top_Dir'};
  my $logdir      = $Config{'Log_Dir'};
  my $ldapdir     = $Config{'LDAP_Dir'};
  my $tallydir    = $Config{'Tally_Dir'};
  my $checkdir    = $Config{"Check_Dir"};

  my $lock_suffix = $Config{'Lock_Suffix'};
  my $msg_suffix  = $Config{'Msg_Suffix'};
  my $msg_preffix = $Config{'Msg_Preffix'};
  my $common_lock = $Config{'Common_Lock'};
  my $force       = $Config{'Force'};
  my $ldaphost    = $Config{"Ldap_Host"};
  my $base        = $Config{"Ldap_Base"};
  my $body_suffix = $Config{'Body_Suffix'};
  my $sig_suffix  = $Config{"Sig_Suffix"};

  my $info_suffix = 'info';



  opendir(LDAP, $ldapdir) || die "can't open gpg output dir $ldapdir: $!";
  my @messages = grep { m/${msg_preffix}\d+\.${msg_suffix}$/ &&
		       -e "$tallydir/$_" }  readdir(LDAP);
  closedir(LDAP);

  my %Data;

  foreach my $msg (sort @messages) {
    my $uid ;
    my $cn  ;
    my $sn  ;

    my $ret = open(LDAP, "$ldapdir/$msg");
    die "Error Reading fingerprint from $checkdir/$msg:$!" unless $ret;
    while (<LDAP>) {
      chomp;
      if    (m/^uid: (\S+)/o) { $uid = $1; next;  }
      elsif (m/^cn: (.*)\s*$/o ) { $cn  = $1; next;  }
      elsif (m/^sn: (.*)\s*$/o ) { $sn  = $1; next;  }
    }
    close LDAP;

    die "Error parsing $ldapdir/$msg" unless $uid;
    next if defined $Data{ $uid };
    $Data{ $uid }->{'cn'} = $cn if $cn;
    $Data{ $uid }->{'sn'} = $sn if $sn;
  }
  my $index = 0;
  foreach my $uid (sort keys %Data) {
    if (! ($index % 25)) {
      print "\f" if $index;
      print "-=" x 35, "\n";
      printf "% 5s %15s\t%s\n", "Count", " Debian UID ", "   Name ";
      print "-=" x 35, "\n";
    }
    printf "% 5d %15s\t%s %s\n", ++$index, $uid, 
      defined $Data{$uid}->{'cn'} ? $Data{$uid}->{'cn'} : " ",
      defined $Data{$uid}->{'sn'} ? $Data{$uid}->{'sn'} : " ";
  }
}


use Devotee;

sub main {
  my $optdesc = Devotee->Optdesc();
  GetOptions (%$optdesc);
  my $dvt = Devotee->new(%::ConfOpts);
  $dvt->validate(%::ConfOpts) unless 
    defined $::ConfOpts{'Config File'} && -r $::ConfOpts{'Config File'};

  $dvt->lock_vote_dir();
  &create_list('Configuration' => $dvt);
  $dvt->unlock_vote_dir();
}

&main;

exit 0;
